generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(cuid())
  email         String     @unique
  name          String?
  password      String
  role          Role       @default(USER)
  developerApps App[]      @relation("DeveloperApps") //Renamed to be more explicit
  downloads     Download[]
  reviews       Review[] // User's reviews
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  isVerified    Boolean    @default(false) //email verification

  @@index([email]) // Index for faster lookup of user by email
}

model App {
  id             String         @id @default(cuid())
  name           String
  description    String
  developer      User           @relation("DeveloperApps", fields: [developerId], references: [id])
  developerId    String
  category       Category
  version        String
  apkFileUrl     String //Store apk url
  downloads      Download[]
  price          Float          @default(0)
  iconUrl        String //App Icon Url
  screenshots    String[] //Array of screenshot urls
  reviews        Review[] //App's reviews
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  approvalStatus ApprovalStatus @default(PENDING) //Approval status for new apps

  @@index([developerId]) // Index for faster queries
}

model Download {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  app       App      @relation(fields: [appId], references: [id])
  appId     String
  createdAt DateTime @default(now())

  @@index([userId]) // Index for faster queries
  @@index([appId]) // Index for faster queries
}

model Review {
  id        String   @id @default(cuid())
  rating    Int      @default(5) @db.SmallInt //rating between 1-5
  comment   String? //optional comments
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  app       App      @relation(fields: [appId], references: [id])
  appId     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId]) // Indexes for faster queries
  @@index([appId])
}

enum Role {
  ADMIN
  DEVELOPER
  USER
}

enum Category {
  GAMES
  PRODUCTIVITY
  UTILITIES
  ENTERTAINMENT
  EDUCATION
  OTHER
}

enum ApprovalStatus {
  PENDING
  APPROVED
  REJECTED
}
